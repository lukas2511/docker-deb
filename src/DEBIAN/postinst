#!/bin/sh
set -e

case "$1" in
	configure)
		if [ -z "$2" ]; then
			addgroup --system docker
		fi
		;;
	abort-*)
		# How'd we get here??
		exit 1
		;;
	*)
		;;
esac

# Automatically added by dh_systemd_enable
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask docker.service >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled docker.service; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable docker.service >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state docker.service >/dev/null || true
fi
# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled docker-firewall-gen.service; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable docker-firewall-gen.service >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state docker-firewall-gen.service >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_systemd_enable
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask docker.socket >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled docker.socket; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable docker.socket >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state docker.socket >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_installinit
if [ -x "/etc/init.d/docker" ]; then
	update-rc.d docker defaults >/dev/null
	invoke-rc.d docker start || exit $?
fi
# End automatically added section
# Automatically added by dh_installudev
if [ "$1" = configure ]; then
	if [ -e "/etc/udev/rules.d/z80_docker.io.rules" ]; then
		echo "Preserving user changes to /etc/udev/rules.d/80-docker.io.rules ..."
		if [ -e "/etc/udev/rules.d/80-docker.io.rules" ]; then
			mv -f "/etc/udev/rules.d/80-docker.io.rules" "/etc/udev/rules.d/80-docker.io.rules.dpkg-new"
		fi
		mv -f "/etc/udev/rules.d/z80_docker.io.rules" "/etc/udev/rules.d/80-docker.io.rules"
	fi
fi
# End automatically added section
# Automatically added by dh_installdeb
dpkg-maintscript-helper mv_conffile /etc/bash_completion.d/docker.io /etc/bash_completion.d/docker 1.2.0~ -- "$@"
# End automatically added section
# Automatically added by dh_installdeb
dpkg-maintscript-helper mv_conffile /etc/default/docker.io /etc/default/docker 1.2.0~ -- "$@"
# End automatically added section
# Automatically added by dh_installdeb
dpkg-maintscript-helper mv_conffile /etc/init.d/docker.io /etc/init.d/docker 1.2.0~ -- "$@"
# End automatically added section
# Automatically added by dh_installdeb
dpkg-maintscript-helper mv_conffile /etc/init/docker.io.conf /etc/init/docker.conf 1.2.0~ -- "$@"
# End automatically added section

